image: mageia:6

before_script:
  - /usr/sbin/urpmi.removemedia -a
  - /usr/sbin/urpmi.addmedia --distrib http://mirror.yandex.ru/mageia/distrib/6.1/x86_64/
  - /usr/sbin/urpmi --auto wget gcc-c++ bsdtar curl bison autoconf automake

mulemicrocontrollersimulator_and_tests:
  script:
    - mkdir -v toolchains
    - mkdir dummyplatform-gcc-builddir
    - sh -c "cd dummyplatform-gcc-builddir && CC=/usr/bin/gcc CXX=/usr/bin/g++ LD=/usr/bin/g++ ../configure -platform=ms -modules=all NOMICROCONTROLLERSIM=yes && make"
    - /usr/bin/g++ -g -Os tests/test01-muleapplication-test.cpp dummyplatform-gcc-builddir/libMule.a -Isrc -Idummyplatform-gcc-builddir/src -o tests/run-test01
    - /usr/bin/g++ -g -Os tests/test04-mulesensor-trigger.cpp dummyplatform-gcc-builddir/libMule.a -Isrc -Idummyplatform-gcc-builddir/src -o tests/run-test04
    - rm -r -f ./tests/run-test0* ./dummyplatform-gcc-builddir/

legoev3platform_and_tests:
  script:
    - mkdir -v toolchains
    - sh -c "cd toolchains && wget -q https://sourcery.mentor.com/GNUToolchain/package12225/public/arm-none-linux-gnueabi/arm-2013.11-33-arm-none-linux-gnueabi-i686-pc-linux-gnu.tar.bz2 && tar -xjf arm-2013.11-33-arm-none-linux-gnueabi-i686-pc-linux-gnu.tar.bz2 && mv -v arm-2013.11/ codesourcery-gcc/"
    - mkdir legoev3-gcc-builddir
    - sh -c "cd legoev3-gcc-builddir && ../configure -platform=legoev3 -platformcc=$PWD/toolchains/codesourcery-gcc/bin/arm-none-linux-gnueabi-gcc -platformcxx=$PWD/toolchains/codesourcery-gcc/bin/arm-none-linux-gnueabi-c++ -platformld=$PWD/toolchains/codesourcery-gcc/bin/arm-none-linux-gnueabi-c++ -platformar=$PWD/toolchains/codesourcery-gcc/bin/arm-none-linux-gnueabi-ar -platformldflags=\"-static-libgcc\" -platformldflags=\"-static-libstdc++\" -modules=all && make"
    - $PWD/toolchains/codesourcery-gcc/bin/arm-none-linux-gnueabi-c++ -g -Os tests/test01-muleapplication-test.cpp legoev3-gcc-builddir/libMule.a -Isrc -Ilegoev3-gcc-builddir/src -o tests/run-test01 -static-libstdc++ -static-libgcc -Isrc/3rdparty/EV3-API-master/API
    - $PWD/toolchains/codesourcery-gcc/bin/arm-none-linux-gnueabi-c++ -g -Os tests/test02-mulefile-currentdirectory.cpp legoev3-gcc-builddir/libMule.a -Isrc -Ilegoev3-gcc-builddir/src -o tests/run-test02 -static-libstdc++ -static-libgcc -Isrc/3rdparty/EV3-API-master/API
    - $PWD/toolchains/codesourcery-gcc/bin/arm-none-linux-gnueabi-c++ -g -Os tests/test03-mulesound-beeping.cpp legoev3-gcc-builddir/libMule.a -Isrc -o tests/run-test03 -static-libstdc++ -static-libgcc -Isrc/3rdparty/EV3-API-master/API -Ilegoev3-gcc-builddir/src
    - $PWD/toolchains/codesourcery-gcc/bin/arm-none-linux-gnueabi-c++ -g -Os tests/test04-mulesensor-trigger.cpp legoev3-gcc-builddir/libMule.a -Isrc -o tests/run-test04 -static-libstdc++ -static-libgcc -Isrc/3rdparty/EV3-API-master/API -Ilegoev3-gcc-builddir/src
    - rm -r -f -v tests/run-test0* ./legoev3-gcc-builddir
    - sh -c "cd src/3rdparty && ./download-3rdparty-components.sh clean"

raspberrypiplatform_and_tests:
  script:
    - mkdir pigpio-gcc-builddir toolchains
    - sh -c "cd toolchains && wget -q http://releases.linaro.org/components/toolchain/binaries/latest-5/aarch64_be-linux-gnu/gcc-linaro-5.5.0-2017.10-x86_64_aarch64_be-linux-gnu.tar.xz && tar -xJf gcc-linaro-5.5.0-2017.10-x86_64_aarch64_be-linux-gnu.tar.xz"
    - sh -c "cd pigpio-gcc-builddir && ../configure -platform=pigpio_rpi -platformcc=$PWD/toolchains/gcc-linaro-5.5.0-2017.10-x86_64_aarch64_be-linux-gnu/bin/aarch64_be-linux-gnu-gcc -platformcxx=$PWD/toolchains/gcc-linaro-5.5.0-2017.10-x86_64_aarch64_be-linux-gnu/bin/aarch64_be-linux-gnu-g++ -platformld=$PWD/toolchains/gcc-linaro-5.5.0-2017.10-x86_64_aarch64_be-linux-gnu/bin/aarch64_be-linux-gnu-g++ -platformar=$PWD/toolchains/gcc-linaro-5.5.0-2017.10-x86_64_aarch64_be-linux-gnu/bin/aarch64_be-linux-gnu-ar -platformldflags=\"-static-libgcc\" -platformldflags=\"-static-libstdc++\" -platformldflags=\"-pthread\" -platformcflags=\"-pthread\" && make"
    - $PWD/toolchains/gcc-linaro-5.5.0-2017.10-x86_64_aarch64_be-linux-gnu/bin/aarch64_be-linux-gnu-g++ -pthread -Isrc/3rdparty/pigpio-master -std=gnu++11 -g -Os -static-libstdc++ -static-libgcc -march=armv8-a -mtune=cortex-a53 tests/test01-muleapplication-test.cpp pigpio-gcc-builddir/libMule.a -Isrc -Ipigpio-gcc-builddir/src -o tests/run-test01
    - $PWD/toolchains/gcc-linaro-5.5.0-2017.10-x86_64_aarch64_be-linux-gnu/bin/aarch64_be-linux-gnu-g++ -pthread -Isrc/3rdparty/pigpio-master -std=gnu++11 -g -Os -static-libstdc++ -static-libgcc -march=armv8-a -mtune=cortex-a53 tests/test02-mulefile-currentdirectory.cpp pigpio-gcc-builddir/libMule.a -Isrc -Ipigpio-gcc-builddir/src -o tests/run-test02
    - $PWD/toolchains/gcc-linaro-5.5.0-2017.10-x86_64_aarch64_be-linux-gnu/bin/aarch64_be-linux-gnu-g++ -pthread -Isrc/3rdparty/pigpio-master -std=gnu++11 -g -Os -static-libstdc++ -static-libgcc -march=armv8-a -mtune=cortex-a53 tests/test03-mulesound-beeping.cpp pigpio-gcc-builddir/libMule.a -Isrc -Ipigpio-gcc-builddir/src -o tests/run-test03
    - $PWD/toolchains/gcc-linaro-5.5.0-2017.10-x86_64_aarch64_be-linux-gnu/bin/aarch64_be-linux-gnu-g++ -pthread -Isrc/3rdparty/pigpio-master -std=gnu++11 -g -Os -static-libstdc++ -static-libgcc -march=armv8-a -mtune=cortex-a53 tests/test04-mulesensor-trigger.cpp pigpio-gcc-builddir/libMule.a -Isrc -Ipigpio-gcc-builddir/src -o tests/run-test04
    - rm -r -f -v tests/run-test0* pigpio-gcc-builddir/

arduinoplatform_and_tests:
  script:
    - mkdir arduinoplatform-gcc-builddir toolchains
    - sh -c "cd toolchains && wget -q https://downloads.arduino.cc/arduino-nightly-linux64.tar.xz && tar -xvJf arduino-nightly-linux64.tar.xz"
    - sh -c "cd arduinoplatform-gcc-builddir && CC=/usr/bin/gcc CXX=/usr/bin/g++ LD=/usr/bin/g++ ../configure -platform=avr -prefix=$PWD/bin -modules=arduino -arduino-device=uno -platformthirdpartytools=no -arduino-idedir=$PWD/toolchains/arduino-nightly"
    - sh -c "cd arduinoplatform-gcc-builddir && make && make install"
    - $PWD/bin/bin/muletool -compile tests/test01-muleapplication-test.cpp && $PWD/bin/bin/muletool -link tests/test01-muleapplication-test.o && mv -v a.out run-test01
    - $PWD/bin/bin/muletool -compile tests/test04-mulesensor-trigger.cpp && $PWD/bin/bin/muletool -link tests/test04-mulesensor-trigger.o && mv -v a.out run-test04
    - rm -r -f run-test* arduinoplatform-gcc-builddir/ bin/
